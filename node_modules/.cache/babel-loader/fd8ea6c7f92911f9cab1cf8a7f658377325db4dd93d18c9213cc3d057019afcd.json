{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shabi\\\\Desktop\\\\my-tailwind-app\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from \"react\";\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: [],\n  totalItems: 0,\n  totalPrice: 0,\n  discount: 0\n};\n\n// Cart reducer\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      {\n        const existingItemIndex = state.items.findIndex(item => item.id === action.payload.id && item.size === action.payload.size && item.color === action.payload.color);\n        let updatedItems;\n        if (existingItemIndex >= 0) {\n          // Item already exists, update quantity\n          updatedItems = [...state.items];\n          updatedItems[existingItemIndex] = {\n            ...updatedItems[existingItemIndex],\n            quantity: updatedItems[existingItemIndex].quantity + (action.payload.quantity || 1)\n          };\n        } else {\n          // New item, add to cart\n          updatedItems = [...state.items, {\n            ...action.payload,\n            quantity: action.payload.quantity || 1\n          }];\n        }\n        const totalPrice = updatedItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        const totalItems = updatedItems.reduce((sum, item) => sum + item.quantity, 0);\n        return {\n          ...state,\n          items: updatedItems,\n          totalItems,\n          totalPrice\n        };\n      }\n    case \"REMOVE_ITEM\":\n      {\n        const updatedItems = state.items.filter(item => !(item.id === action.payload.id && item.size === action.payload.size && item.color === action.payload.color));\n        const totalPrice = updatedItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        const totalItems = updatedItems.reduce((sum, item) => sum + item.quantity, 0);\n        return {\n          ...state,\n          items: updatedItems,\n          totalItems,\n          totalPrice\n        };\n      }\n    case \"UPDATE_QUANTITY\":\n      {\n        const updatedItems = state.items.map(item => {\n          if (item.id === action.payload.id && item.size === action.payload.size && item.color === action.payload.color) {\n            return {\n              ...item,\n              quantity: action.payload.quantity\n            };\n          }\n          return item;\n        });\n        const totalPrice = updatedItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        const totalItems = updatedItems.reduce((sum, item) => sum + item.quantity, 0);\n        return {\n          ...state,\n          items: updatedItems,\n          totalItems,\n          totalPrice\n        };\n      }\n    case \"APPLY_DISCOUNT\":\n      return {\n        ...state,\n        discount: action.payload\n      };\n    case \"CLEAR_CART\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use cart context\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n\n// Cart provider component\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  // Load cart from localStorage\n  const loadCartFromStorage = () => {\n    if (typeof window !== \"undefined\") {\n      const savedCart = localStorage.getItem(\"cart\");\n      return savedCart ? JSON.parse(savedCart) : initialState;\n    }\n    return initialState;\n  };\n  const [state, dispatch] = useReducer(cartReducer, initialState, loadCartFromStorage);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"cart\", JSON.stringify(state));\n    }\n  }, [state]);\n\n  // Cart actions\n  const addItem = item => dispatch({\n    type: \"ADD_ITEM\",\n    payload: item\n  });\n  const removeItem = item => dispatch({\n    type: \"REMOVE_ITEM\",\n    payload: item\n  });\n  const updateQuantity = (item, quantity) => dispatch({\n    type: \"UPDATE_QUANTITY\",\n    payload: {\n      ...item,\n      quantity\n    }\n  });\n  const applyDiscount = amount => dispatch({\n    type: \"APPLY_DISCOUNT\",\n    payload: amount\n  });\n  const clearCart = () => dispatch({\n    type: \"CLEAR_CART\"\n  });\n  const value = {\n    cart: state,\n    addItem,\n    removeItem,\n    updateQuantity,\n    applyDiscount,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n};\n_s2(CartProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","items","totalItems","totalPrice","discount","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","payload","size","color","updatedItems","quantity","reduce","sum","price","filter","map","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","loadCartFromStorage","window","savedCart","localStorage","getItem","JSON","parse","dispatch","setItem","stringify","addItem","removeItem","updateQuantity","applyDiscount","amount","clearCart","value","cart","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shabi/Desktop/my-tailwind-app/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\r\n\r\n// Initial state\r\nconst initialState = {\r\n  items: [],\r\n  totalItems: 0,\r\n  totalPrice: 0,\r\n  discount: 0,\r\n};\r\n\r\n// Cart reducer\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ITEM\": {\r\n      const existingItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload.id && item.size === action.payload.size && item.color === action.payload.color\r\n      );\r\n\r\n      let updatedItems;\r\n\r\n      if (existingItemIndex >= 0) {\r\n        // Item already exists, update quantity\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingItemIndex] = {\r\n          ...updatedItems[existingItemIndex],\r\n          quantity: updatedItems[existingItemIndex].quantity + (action.payload.quantity || 1),\r\n        };\r\n      } else {\r\n        // New item, add to cart\r\n        updatedItems = [...state.items, { ...action.payload, quantity: action.payload.quantity || 1 }];\r\n      }\r\n\r\n      const totalPrice = updatedItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n      const totalItems = updatedItems.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n      return {\r\n        ...state,\r\n        items: updatedItems,\r\n        totalItems,\r\n        totalPrice,\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_ITEM\": {\r\n      const updatedItems = state.items.filter(\r\n        (item) => !(item.id === action.payload.id && item.size === action.payload.size && item.color === action.payload.color)\r\n      );\r\n\r\n      const totalPrice = updatedItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n      const totalItems = updatedItems.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n      return {\r\n        ...state,\r\n        items: updatedItems,\r\n        totalItems,\r\n        totalPrice,\r\n      };\r\n    }\r\n\r\n    case \"UPDATE_QUANTITY\": {\r\n      const updatedItems = state.items.map((item) => {\r\n        if (item.id === action.payload.id && item.size === action.payload.size && item.color === action.payload.color) {\r\n          return { ...item, quantity: action.payload.quantity };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      const totalPrice = updatedItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\r\n      const totalItems = updatedItems.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n      return {\r\n        ...state,\r\n        items: updatedItems,\r\n        totalItems,\r\n        totalPrice,\r\n      };\r\n    }\r\n\r\n    case \"APPLY_DISCOUNT\":\r\n      return {\r\n        ...state,\r\n        discount: action.payload,\r\n      };\r\n\r\n    case \"CLEAR_CART\":\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst CartContext = createContext();\r\n\r\n// Custom hook to use cart context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error(\"useCart must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\n// Cart provider component\r\nexport const CartProvider = ({ children }) => {\r\n  // Load cart from localStorage\r\n  const loadCartFromStorage = () => {\r\n    if (typeof window !== \"undefined\") {\r\n      const savedCart = localStorage.getItem(\"cart\");\r\n      return savedCart ? JSON.parse(savedCart) : initialState;\r\n    }\r\n    return initialState;\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(cartReducer, initialState, loadCartFromStorage);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.setItem(\"cart\", JSON.stringify(state));\r\n    }\r\n  }, [state]);\r\n\r\n  // Cart actions\r\n  const addItem = (item) => dispatch({ type: \"ADD_ITEM\", payload: item });\r\n  const removeItem = (item) => dispatch({ type: \"REMOVE_ITEM\", payload: item });\r\n  const updateQuantity = (item, quantity) => \r\n    dispatch({ type: \"UPDATE_QUANTITY\", payload: { ...item, quantity } });\r\n  const applyDiscount = (amount) => dispatch({ type: \"APPLY_DISCOUNT\", payload: amount });\r\n  const clearCart = () => dispatch({ type: \"CLEAR_CART\" });\r\n\r\n  const value = {\r\n    cart: state,\r\n    addItem,\r\n    removeItem,\r\n    updateQuantity,\r\n    applyDiscount,\r\n    clearCart,\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n\r\nexport default CartContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}