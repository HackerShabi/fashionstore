{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shabi\\\\Desktop\\\\my-tailwind-app\\\\src\\\\admin\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport AdminLayout from './AdminLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  if (!currentUser) {\n    // Redirect to login if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/admin/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the child routes with the admin layout\n  return /*#__PURE__*/_jsxDEV(AdminLayout, {\n    children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ProtectedRoute, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","AdminLayout","jsxDEV","_jsxDEV","ProtectedRoute","_s","currentUser","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/Shabi/Desktop/my-tailwind-app/src/admin/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport AdminLayout from './AdminLayout';\r\n\r\nconst ProtectedRoute = () => {\r\n  const { currentUser } = useAuth();\r\n  \r\n  if (!currentUser) {\r\n    // Redirect to login if not authenticated\r\n    return <Navigate to=\"/admin/login\" />;\r\n  }\r\n\r\n  // Render the child routes with the admin layout\r\n  return (\r\n    <AdminLayout>\r\n      <Outlet />\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAY,CAAC,GAAGN,OAAO,CAAC,CAAC;EAEjC,IAAI,CAACM,WAAW,EAAE;IAChB;IACA,oBAAOH,OAAA,CAACL,QAAQ;MAACS,EAAE,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvC;;EAEA;EACA,oBACER,OAAA,CAACF,WAAW;IAAAW,QAAA,eACVT,OAAA,CAACJ,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAElB,CAAC;AAACN,EAAA,CAdID,cAAc;EAAA,QACMJ,OAAO;AAAA;AAAAa,EAAA,GAD3BT,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}