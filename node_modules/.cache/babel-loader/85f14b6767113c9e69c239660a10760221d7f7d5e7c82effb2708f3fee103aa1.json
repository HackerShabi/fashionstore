{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shabi\\\\Desktop\\\\my-tailwind-app\\\\src\\\\admin\\\\context\\\\AdminDataContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Create admin data context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDataContext = /*#__PURE__*/createContext();\n\n// Custom hook to use admin data context\nexport const useAdminData = () => {\n  _s();\n  return useContext(AdminDataContext);\n};\n_s(useAdminData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AdminDataProvider = ({\n  children\n}) => {\n  _s2();\n  // State for all data\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [homepageSettings, setHomepageSettings] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load data from localStorage on mount\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Load products\n        const storedProducts = localStorage.getItem('admin_products');\n        if (storedProducts) {\n          setProducts(JSON.parse(storedProducts));\n        } else {\n          // Initialize with sample data if empty\n          setProducts(generateSampleProducts());\n        }\n\n        // Load categories\n        const storedCategories = localStorage.getItem('admin_categories');\n        if (storedCategories) {\n          setCategories(JSON.parse(storedCategories));\n        } else {\n          // Initialize with sample data if empty\n          setCategories(generateSampleCategories());\n        }\n\n        // Load orders\n        const storedOrders = localStorage.getItem('admin_orders');\n        if (storedOrders) {\n          setOrders(JSON.parse(storedOrders));\n        } else {\n          // Initialize with sample data if empty\n          setOrders(generateSampleOrders());\n        }\n\n        // Load users\n        const storedUsers = localStorage.getItem('admin_users');\n        if (storedUsers) {\n          setUsers(JSON.parse(storedUsers));\n        } else {\n          // Initialize with sample data if empty\n          setUsers(generateSampleUsers());\n        }\n\n        // Load homepage settings\n        const storedHomepageSettings = localStorage.getItem('admin_homepage_settings');\n        if (storedHomepageSettings) {\n          setHomepageSettings(JSON.parse(storedHomepageSettings));\n        } else {\n          // Initialize with sample data if empty\n          setHomepageSettings(generateSampleHomepageSettings());\n        }\n      } catch (error) {\n        console.error('Error loading data from localStorage:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Save data to localStorage whenever it changes\n  useEffect(() => {\n    if (!loading) {\n      localStorage.setItem('admin_products', JSON.stringify(products));\n    }\n  }, [products, loading]);\n  useEffect(() => {\n    if (!loading) {\n      localStorage.setItem('admin_categories', JSON.stringify(categories));\n    }\n  }, [categories, loading]);\n  useEffect(() => {\n    if (!loading) {\n      localStorage.setItem('admin_orders', JSON.stringify(orders));\n    }\n  }, [orders, loading]);\n  useEffect(() => {\n    if (!loading) {\n      localStorage.setItem('admin_users', JSON.stringify(users));\n    }\n  }, [users, loading]);\n  useEffect(() => {\n    if (!loading && homepageSettings) {\n      localStorage.setItem('admin_homepage_settings', JSON.stringify(homepageSettings));\n    }\n  }, [homepageSettings, loading]);\n\n  // Product CRUD operations\n  const getProductById = id => {\n    return products.find(product => product.id === id) || null;\n  };\n  const addProduct = productData => {\n    const newProduct = {\n      ...productData,\n      id: `prod_${uuidv4()}`,\n      createdAt: new Date().toISOString()\n    };\n    setProducts([...products, newProduct]);\n    return newProduct;\n  };\n  const updateProduct = (id, productData) => {\n    const updatedProducts = products.map(product => product.id === id ? {\n      ...product,\n      ...productData,\n      updatedAt: new Date().toISOString()\n    } : product);\n    setProducts(updatedProducts);\n  };\n  const deleteProduct = id => {\n    const updatedProducts = products.filter(product => product.id !== id);\n    setProducts(updatedProducts);\n  };\n\n  // Category CRUD operations\n  const getCategoryById = id => {\n    return categories.find(category => category.id === id) || null;\n  };\n  const addCategory = categoryData => {\n    const newCategory = {\n      ...categoryData,\n      id: `cat_${uuidv4()}`,\n      createdAt: new Date().toISOString()\n    };\n    setCategories([...categories, newCategory]);\n    return newCategory;\n  };\n  const updateCategory = (id, categoryData) => {\n    const updatedCategories = categories.map(category => category.id === id ? {\n      ...category,\n      ...categoryData,\n      updatedAt: new Date().toISOString()\n    } : category);\n    setCategories(updatedCategories);\n  };\n  const deleteCategory = id => {\n    const updatedCategories = categories.filter(category => category.id !== id);\n    setCategories(updatedCategories);\n  };\n\n  // Order operations\n  const getOrderById = id => {\n    return orders.find(order => order.id === id) || null;\n  };\n  const updateOrderStatus = (id, status) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      status,\n      updatedAt: new Date().toISOString()\n    } : order);\n    setOrders(updatedOrders);\n  };\n\n  // User operations\n  const getUserById = id => {\n    return users.find(user => user.id === id) || null;\n  };\n  const updateUserStatus = (id, isActive) => {\n    const updatedUsers = users.map(user => user.id === id ? {\n      ...user,\n      isActive,\n      updatedAt: new Date().toISOString()\n    } : user);\n    setUsers(updatedUsers);\n  };\n  const updateUser = (id, userData) => {\n    const updatedUsers = users.map(user => user.id === id ? {\n      ...user,\n      ...userData,\n      updatedAt: new Date().toISOString()\n    } : user);\n    setUsers(updatedUsers);\n  };\n\n  // Homepage settings operations\n  const updateHomepageSettings = settingsData => {\n    setHomepageSettings({\n      ...homepageSettings,\n      ...settingsData,\n      updatedAt: new Date().toISOString()\n    });\n  };\n\n  // Analytics data\n  const getAnalyticsData = () => {\n    // Calculate total revenue\n    const totalRevenue = orders.reduce((total, order) => {\n      if (order.status !== 'cancelled') {\n        return total + order.items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n      }\n      return total;\n    }, 0);\n\n    // Get pending orders count\n    const pendingOrdersCount = orders.filter(order => order.status === 'pending').length;\n\n    // Get total products count\n    const totalProductsCount = products.length;\n\n    // Get total categories count\n    const totalCategoriesCount = categories.length;\n\n    // Get total users count\n    const totalUsersCount = users.length;\n\n    // Get low stock products\n    const lowStockProducts = products.filter(product => product.stock < 10);\n\n    // Get recent orders\n    const recentOrders = [...orders].sort((a, b) => new Date(b.date) - new Date(a.date)).slice(0, 5);\n\n    // Calculate revenue by date (last 7 days)\n    const last7Days = Array.from({\n      length: 7\n    }, (_, i) => {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      return date.toISOString().split('T')[0];\n    }).reverse();\n    const revenueByDate = last7Days.map(date => {\n      const dayRevenue = orders.filter(order => order.status !== 'cancelled' && order.date.split('T')[0] === date).reduce((total, order) => total + order.items.reduce((sum, item) => sum + item.price * item.quantity, 0), 0);\n      return {\n        date,\n        revenue: dayRevenue\n      };\n    });\n    return {\n      totalRevenue,\n      pendingOrdersCount,\n      totalProductsCount,\n      totalCategoriesCount,\n      totalUsersCount,\n      lowStockProducts,\n      recentOrders,\n      revenueByDate\n    };\n  };\n\n  // Sample data generators\n  const generateSampleProducts = () => {\n    return [{\n      id: 'prod_1',\n      name: 'Classic T-Shirt',\n      description: 'A comfortable and versatile t-shirt for everyday wear.',\n      price: 24.99,\n      category: 'cat_1',\n      subCategory: 'sub_1',\n      gender: 'unisex',\n      sizes: ['S', 'M', 'L', 'XL'],\n      colors: ['Black', 'White', 'Gray'],\n      stock: 100,\n      images: ['/assets/products/tshirt1.jpg', '/assets/products/tshirt2.jpg'],\n      featured: true,\n      trending: true,\n      createdAt: new Date().toISOString()\n    }, {\n      id: 'prod_2',\n      name: 'Slim Fit Jeans',\n      description: 'Modern slim fit jeans with a comfortable stretch.',\n      price: 59.99,\n      category: 'cat_2',\n      subCategory: 'sub_3',\n      gender: 'men',\n      sizes: ['30', '32', '34', '36'],\n      colors: ['Blue', 'Black'],\n      stock: 75,\n      images: ['/assets/products/jeans1.jpg', '/assets/products/jeans2.jpg'],\n      featured: false,\n      trending: true,\n      createdAt: new Date().toISOString()\n    }, {\n      id: 'prod_3',\n      name: 'Summer Dress',\n      description: 'Light and flowy summer dress perfect for warm days.',\n      price: 49.99,\n      category: 'cat_3',\n      subCategory: 'sub_5',\n      gender: 'women',\n      sizes: ['XS', 'S', 'M', 'L'],\n      colors: ['Red', 'Blue', 'Yellow'],\n      stock: 50,\n      images: ['/assets/products/dress1.jpg', '/assets/products/dress2.jpg'],\n      featured: true,\n      trending: false,\n      createdAt: new Date().toISOString()\n    }];\n  };\n  const generateSampleCategories = () => {\n    return [{\n      id: 'cat_1',\n      name: 'Tops',\n      description: 'All types of tops including t-shirts, shirts, and blouses',\n      image: '/assets/categories/tops.jpg',\n      featured: true,\n      subcategories: [{\n        id: 'sub_1',\n        name: 'T-Shirts'\n      }, {\n        id: 'sub_2',\n        name: 'Shirts'\n      }],\n      createdAt: new Date().toISOString()\n    }, {\n      id: 'cat_2',\n      name: 'Bottoms',\n      description: 'All types of bottoms including pants, jeans, and shorts',\n      image: '/assets/categories/bottoms.jpg',\n      featured: true,\n      subcategories: [{\n        id: 'sub_3',\n        name: 'Jeans'\n      }, {\n        id: 'sub_4',\n        name: 'Shorts'\n      }],\n      createdAt: new Date().toISOString()\n    }, {\n      id: 'cat_3',\n      name: 'Dresses',\n      description: 'All types of dresses for various occasions',\n      image: '/assets/categories/dresses.jpg',\n      featured: true,\n      subcategories: [{\n        id: 'sub_5',\n        name: 'Casual Dresses'\n      }, {\n        id: 'sub_6',\n        name: 'Formal Dresses'\n      }],\n      createdAt: new Date().toISOString()\n    }];\n  };\n  const generateSampleOrders = () => {\n    return [{\n      id: 'ord_1',\n      customer: {\n        name: 'John Doe',\n        email: 'john@example.com',\n        phone: '555-123-4567'\n      },\n      date: new Date().toISOString(),\n      status: 'delivered',\n      shippingAddress: {\n        street: '123 Main St',\n        city: 'Anytown',\n        state: 'CA',\n        zip: '12345',\n        country: 'USA'\n      },\n      items: [{\n        id: 'prod_1',\n        name: 'Classic T-Shirt',\n        price: 24.99,\n        quantity: 2,\n        image: '/assets/products/tshirt1.jpg',\n        variant: {\n          color: 'Black',\n          size: 'M'\n        }\n      }],\n      shipping: 5.99,\n      tax: 4.50,\n      createdAt: new Date().toISOString()\n    }, {\n      id: 'ord_2',\n      customer: {\n        name: 'Jane Smith',\n        email: 'jane@example.com',\n        phone: '555-987-6543'\n      },\n      date: new Date(Date.now() - 86400000).toISOString(),\n      // 1 day ago\n      status: 'shipped',\n      shippingAddress: {\n        street: '456 Oak Ave',\n        city: 'Somewhere',\n        state: 'NY',\n        zip: '67890',\n        country: 'USA'\n      },\n      items: [{\n        id: 'prod_2',\n        name: 'Slim Fit Jeans',\n        price: 59.99,\n        quantity: 1,\n        image: '/assets/products/jeans1.jpg',\n        variant: {\n          color: 'Blue',\n          size: '32'\n        }\n      }, {\n        id: 'prod_3',\n        name: 'Summer Dress',\n        price: 49.99,\n        quantity: 1,\n        image: '/assets/products/dress1.jpg',\n        variant: {\n          color: 'Red',\n          size: 'M'\n        }\n      }],\n      shipping: 5.99,\n      tax: 8.80,\n      createdAt: new Date(Date.now() - 86400000).toISOString()\n    }, {\n      id: 'ord_3',\n      customer: {\n        name: 'Bob Johnson',\n        email: 'bob@example.com',\n        phone: '555-555-5555'\n      },\n      date: new Date(Date.now() - 172800000).toISOString(),\n      // 2 days ago\n      status: 'pending',\n      shippingAddress: {\n        street: '789 Pine Rd',\n        city: 'Elsewhere',\n        state: 'TX',\n        zip: '54321',\n        country: 'USA'\n      },\n      items: [{\n        id: 'prod_3',\n        name: 'Summer Dress',\n        price: 49.99,\n        quantity: 2,\n        image: '/assets/products/dress1.jpg',\n        variant: {\n          color: 'Blue',\n          size: 'S'\n        }\n      }],\n      shipping: 5.99,\n      tax: 7.00,\n      createdAt: new Date(Date.now() - 172800000).toISOString()\n    }];\n  };\n  const generateSampleUsers = () => {\n    return [{\n      id: 'user_1',\n      name: 'Admin User',\n      email: 'admin@example.com',\n      role: 'admin',\n      isActive: true,\n      createdAt: new Date().toISOString()\n    }, {\n      id: 'user_2',\n      name: 'John Doe',\n      email: 'john@example.com',\n      role: 'user',\n      isActive: true,\n      createdAt: new Date(Date.now() - 86400000).toISOString()\n    }, {\n      id: 'user_3',\n      name: 'Jane Smith',\n      email: 'jane@example.com',\n      role: 'user',\n      isActive: true,\n      createdAt: new Date(Date.now() - 172800000).toISOString()\n    }];\n  };\n  const generateSampleHomepageSettings = () => {\n    return {\n      heroTitle: 'Summer Collection',\n      heroSubtitle: 'Discover our latest summer styles with up to 50% off',\n      heroImage: '/assets/products/hero.jpg',\n      featuredCategories: ['cat_1', 'cat_2', 'cat_3'],\n      featuredProducts: ['prod_1', 'prod_2', 'prod_3'],\n      promoTitle: 'New Arrivals',\n      promoSubtitle: 'Check out our latest products just for you',\n      promoImage: '/assets/products/promo.jpg',\n      promoLink: '/shop/new-arrivals',\n      testimonials: [{\n        id: 'testimonial_1',\n        name: 'Sarah Johnson',\n        role: 'Regular Customer',\n        comment: 'I love the quality of the clothes. They last forever and always look great!',\n        image: '/assets/testimonials/person1.jpg'\n      }, {\n        id: 'testimonial_2',\n        name: 'Mike Thompson',\n        role: 'Fashion Enthusiast',\n        comment: 'The styles are always on trend and the prices are reasonable. My go-to shop!',\n        image: '/assets/testimonials/person2.jpg'\n      }],\n      createdAt: new Date().toISOString()\n    };\n  };\n\n  // Stats and analytics\n  const getStats = () => {\n    // Calculate total revenue from all orders\n    const totalRevenue = orders.reduce((sum, order) => {\n      const orderTotal = order.items.reduce((itemSum, item) => itemSum + item.price * item.quantity, 0);\n      return sum + orderTotal + (order.shipping || 0) + (order.tax || 0);\n    }, 0);\n\n    // Get order counts by status\n    const ordersByStatus = {\n      pending: orders.filter(order => order.status === 'pending').length,\n      processing: orders.filter(order => order.status === 'processing').length,\n      shipped: orders.filter(order => order.status === 'shipped').length,\n      delivered: orders.filter(order => order.status === 'delivered').length,\n      cancelled: orders.filter(order => order.status === 'cancelled').length\n    };\n\n    // Calculate growth percentages (using mock data for now)\n    const productGrowth = 12;\n    const orderGrowth = 5;\n    const userGrowth = 8;\n    const revenueGrowth = 15;\n\n    // Generate revenue and order data by month (last 6 months)\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const currentMonth = new Date().getMonth();\n\n    // Initialize revenue and orders by month\n    const revenueByMonth = {};\n    const ordersByMonth = {};\n\n    // Create last 6 months labels\n    for (let i = 5; i >= 0; i--) {\n      const monthIndex = (currentMonth - i + 12) % 12;\n      const monthName = monthNames[monthIndex];\n      revenueByMonth[monthName] = 0;\n      ordersByMonth[monthName] = 0;\n    }\n\n    // Populate with data (using mock data for demonstration)\n    const monthKeys = Object.keys(revenueByMonth);\n\n    // Mock revenue data\n    revenueByMonth[monthKeys[0]] = 1200;\n    revenueByMonth[monthKeys[1]] = 1500;\n    revenueByMonth[monthKeys[2]] = 1800;\n    revenueByMonth[monthKeys[3]] = 1600;\n    revenueByMonth[monthKeys[4]] = 2200;\n    revenueByMonth[monthKeys[5]] = 2500;\n\n    // Mock order data\n    ordersByMonth[monthKeys[0]] = 12;\n    ordersByMonth[monthKeys[1]] = 15;\n    ordersByMonth[monthKeys[2]] = 18;\n    ordersByMonth[monthKeys[3]] = 16;\n    ordersByMonth[monthKeys[4]] = 22;\n    ordersByMonth[monthKeys[5]] = 25;\n\n    // Calculate top products\n    const productSales = {};\n    orders.forEach(order => {\n      order.items.forEach(item => {\n        if (!productSales[item.id]) {\n          productSales[item.id] = {\n            id: item.id,\n            name: item.name,\n            image: item.image,\n            revenue: 0,\n            count: 0\n          };\n        }\n        productSales[item.id].revenue += item.price * item.quantity;\n        productSales[item.id].count += item.quantity;\n      });\n    });\n    const topProducts = Object.values(productSales).sort((a, b) => b.revenue - a.revenue).slice(0, 5).map(product => {\n      // Find the actual product to get the latest data\n      const fullProduct = products.find(p => p.id === product.id) || product;\n      return {\n        ...product,\n        name: fullProduct.name,\n        image: fullProduct.image,\n        percentage: Math.round(product.revenue / totalRevenue * 100)\n      };\n    });\n\n    // Calculate top categories\n    const categorySales = {};\n    orders.forEach(order => {\n      order.items.forEach(item => {\n        // Find product to get its category\n        const product = products.find(p => p.id === item.id);\n        if (product && product.categoryId) {\n          if (!categorySales[product.categoryId]) {\n            const category = categories.find(c => c.id === product.categoryId);\n            categorySales[product.categoryId] = {\n              id: product.categoryId,\n              name: category ? category.name : 'Unknown',\n              image: category ? category.image : null,\n              count: 0\n            };\n          }\n          categorySales[product.categoryId].count += item.quantity;\n        }\n      });\n    });\n    const topCategories = Object.values(categorySales).sort((a, b) => b.count - a.count).slice(0, 5).map(category => {\n      const totalCount = Object.values(categorySales).reduce((sum, cat) => sum + cat.count, 0);\n      return {\n        ...category,\n        percentage: Math.round(category.count / totalCount * 100)\n      };\n    });\n\n    // Generate recent activity\n    const recentActivity = [{\n      type: 'order',\n      message: 'New order #ORD-5782 received',\n      time: '5 minutes ago'\n    }, {\n      type: 'user',\n      message: 'New user registered: Emma Thompson',\n      time: '1 hour ago'\n    }, {\n      type: 'product',\n      message: 'Product \"Summer T-Shirt\" is low in stock (2 remaining)',\n      time: '3 hours ago'\n    }, {\n      type: 'order',\n      message: 'Order #ORD-5781 status changed to \"Shipped\"',\n      time: '5 hours ago'\n    }, {\n      type: 'product',\n      message: 'Product \"Leather Jacket\" was updated',\n      time: '1 day ago'\n    }, {\n      type: 'user',\n      message: 'User account for \"john@example.com\" was activated',\n      time: '2 days ago'\n    }];\n    return {\n      totalProducts: products.length,\n      totalOrders: orders.length,\n      totalUsers: users.length,\n      totalRevenue,\n      ordersByStatus,\n      productGrowth,\n      orderGrowth,\n      userGrowth,\n      revenueGrowth,\n      revenueByMonth,\n      ordersByMonth,\n      topProducts,\n      topCategories,\n      recentActivity\n    };\n  };\n  const value = {\n    // Data\n    products,\n    categories,\n    orders,\n    users,\n    homepageSettings,\n    loading,\n    // Product operations\n    getProductById,\n    addProduct,\n    updateProduct,\n    deleteProduct,\n    // Category operations\n    getCategoryById,\n    addCategory,\n    updateCategory,\n    deleteCategory,\n    // Order operations\n    getOrderById,\n    updateOrderStatus,\n    // User operations\n    getUserById,\n    updateUserStatus,\n    updateUser,\n    // Homepage settings operations\n    updateHomepageSettings,\n    // Analytics\n    getAnalyticsData,\n    // Stats\n    getStats\n  };\n  return /*#__PURE__*/_jsxDEV(AdminDataContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 747,\n    columnNumber: 5\n  }, this);\n};\n_s2(AdminDataProvider, \"VJMowCuZ3UIegFE+dHeX+xvuUac=\");\n_c = AdminDataProvider;\nexport default AdminDataContext;\nvar _c;\n$RefreshReg$(_c, \"AdminDataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","v4","uuidv4","jsxDEV","_jsxDEV","AdminDataContext","useAdminData","_s","AdminDataProvider","children","_s2","products","setProducts","categories","setCategories","orders","setOrders","users","setUsers","homepageSettings","setHomepageSettings","loading","setLoading","loadData","storedProducts","localStorage","getItem","JSON","parse","generateSampleProducts","storedCategories","generateSampleCategories","storedOrders","generateSampleOrders","storedUsers","generateSampleUsers","storedHomepageSettings","generateSampleHomepageSettings","error","console","setItem","stringify","getProductById","id","find","product","addProduct","productData","newProduct","createdAt","Date","toISOString","updateProduct","updatedProducts","map","updatedAt","deleteProduct","filter","getCategoryById","category","addCategory","categoryData","newCategory","updateCategory","updatedCategories","deleteCategory","getOrderById","order","updateOrderStatus","status","updatedOrders","getUserById","user","updateUserStatus","isActive","updatedUsers","updateUser","userData","updateHomepageSettings","settingsData","getAnalyticsData","totalRevenue","reduce","total","items","sum","item","price","quantity","pendingOrdersCount","length","totalProductsCount","totalCategoriesCount","totalUsersCount","lowStockProducts","stock","recentOrders","sort","a","b","date","slice","last7Days","Array","from","_","i","setDate","getDate","split","reverse","revenueByDate","dayRevenue","revenue","name","description","subCategory","gender","sizes","colors","images","featured","trending","image","subcategories","customer","email","phone","shippingAddress","street","city","state","zip","country","variant","color","size","shipping","tax","now","role","heroTitle","heroSubtitle","heroImage","featuredCategories","featuredProducts","promoTitle","promoSubtitle","promoImage","promoLink","testimonials","comment","getStats","orderTotal","itemSum","ordersByStatus","pending","processing","shipped","delivered","cancelled","productGrowth","orderGrowth","userGrowth","revenueGrowth","monthNames","currentMonth","getMonth","revenueByMonth","ordersByMonth","monthIndex","monthName","monthKeys","Object","keys","productSales","forEach","count","topProducts","values","fullProduct","p","percentage","Math","round","categorySales","categoryId","c","topCategories","totalCount","cat","recentActivity","type","message","time","totalProducts","totalOrders","totalUsers","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shabi/Desktop/my-tailwind-app/src/admin/context/AdminDataContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Create admin data context\r\nconst AdminDataContext = createContext();\r\n\r\n// Custom hook to use admin data context\r\nexport const useAdminData = () => {\r\n  return useContext(AdminDataContext);\r\n};\r\n\r\nexport const AdminDataProvider = ({ children }) => {\r\n  // State for all data\r\n  const [products, setProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [homepageSettings, setHomepageSettings] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load data from localStorage on mount\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        // Load products\r\n        const storedProducts = localStorage.getItem('admin_products');\r\n        if (storedProducts) {\r\n          setProducts(JSON.parse(storedProducts));\r\n        } else {\r\n          // Initialize with sample data if empty\r\n          setProducts(generateSampleProducts());\r\n        }\r\n        \r\n        // Load categories\r\n        const storedCategories = localStorage.getItem('admin_categories');\r\n        if (storedCategories) {\r\n          setCategories(JSON.parse(storedCategories));\r\n        } else {\r\n          // Initialize with sample data if empty\r\n          setCategories(generateSampleCategories());\r\n        }\r\n        \r\n        // Load orders\r\n        const storedOrders = localStorage.getItem('admin_orders');\r\n        if (storedOrders) {\r\n          setOrders(JSON.parse(storedOrders));\r\n        } else {\r\n          // Initialize with sample data if empty\r\n          setOrders(generateSampleOrders());\r\n        }\r\n        \r\n        // Load users\r\n        const storedUsers = localStorage.getItem('admin_users');\r\n        if (storedUsers) {\r\n          setUsers(JSON.parse(storedUsers));\r\n        } else {\r\n          // Initialize with sample data if empty\r\n          setUsers(generateSampleUsers());\r\n        }\r\n        \r\n        // Load homepage settings\r\n        const storedHomepageSettings = localStorage.getItem('admin_homepage_settings');\r\n        if (storedHomepageSettings) {\r\n          setHomepageSettings(JSON.parse(storedHomepageSettings));\r\n        } else {\r\n          // Initialize with sample data if empty\r\n          setHomepageSettings(generateSampleHomepageSettings());\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading data from localStorage:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n  \r\n  // Save data to localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      localStorage.setItem('admin_products', JSON.stringify(products));\r\n    }\r\n  }, [products, loading]);\r\n  \r\n  useEffect(() => {\r\n    if (!loading) {\r\n      localStorage.setItem('admin_categories', JSON.stringify(categories));\r\n    }\r\n  }, [categories, loading]);\r\n  \r\n  useEffect(() => {\r\n    if (!loading) {\r\n      localStorage.setItem('admin_orders', JSON.stringify(orders));\r\n    }\r\n  }, [orders, loading]);\r\n  \r\n  useEffect(() => {\r\n    if (!loading) {\r\n      localStorage.setItem('admin_users', JSON.stringify(users));\r\n    }\r\n  }, [users, loading]);\r\n  \r\n  useEffect(() => {\r\n    if (!loading && homepageSettings) {\r\n      localStorage.setItem('admin_homepage_settings', JSON.stringify(homepageSettings));\r\n    }\r\n  }, [homepageSettings, loading]);\r\n  \r\n  // Product CRUD operations\r\n  const getProductById = (id) => {\r\n    return products.find(product => product.id === id) || null;\r\n  };\r\n  \r\n  const addProduct = (productData) => {\r\n    const newProduct = {\r\n      ...productData,\r\n      id: `prod_${uuidv4()}`,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    setProducts([...products, newProduct]);\r\n    return newProduct;\r\n  };\r\n  \r\n  const updateProduct = (id, productData) => {\r\n    const updatedProducts = products.map(product => \r\n      product.id === id ? { ...product, ...productData, updatedAt: new Date().toISOString() } : product\r\n    );\r\n    \r\n    setProducts(updatedProducts);\r\n  };\r\n  \r\n  const deleteProduct = (id) => {\r\n    const updatedProducts = products.filter(product => product.id !== id);\r\n    setProducts(updatedProducts);\r\n  };\r\n  \r\n  // Category CRUD operations\r\n  const getCategoryById = (id) => {\r\n    return categories.find(category => category.id === id) || null;\r\n  };\r\n  \r\n  const addCategory = (categoryData) => {\r\n    const newCategory = {\r\n      ...categoryData,\r\n      id: `cat_${uuidv4()}`,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    \r\n    setCategories([...categories, newCategory]);\r\n    return newCategory;\r\n  };\r\n  \r\n  const updateCategory = (id, categoryData) => {\r\n    const updatedCategories = categories.map(category => \r\n      category.id === id ? { ...category, ...categoryData, updatedAt: new Date().toISOString() } : category\r\n    );\r\n    \r\n    setCategories(updatedCategories);\r\n  };\r\n  \r\n  const deleteCategory = (id) => {\r\n    const updatedCategories = categories.filter(category => category.id !== id);\r\n    setCategories(updatedCategories);\r\n  };\r\n  \r\n  // Order operations\r\n  const getOrderById = (id) => {\r\n    return orders.find(order => order.id === id) || null;\r\n  };\r\n  \r\n  const updateOrderStatus = (id, status) => {\r\n    const updatedOrders = orders.map(order => \r\n      order.id === id ? { ...order, status, updatedAt: new Date().toISOString() } : order\r\n    );\r\n    \r\n    setOrders(updatedOrders);\r\n  };\r\n  \r\n  // User operations\r\n  const getUserById = (id) => {\r\n    return users.find(user => user.id === id) || null;\r\n  };\r\n  \r\n  const updateUserStatus = (id, isActive) => {\r\n    const updatedUsers = users.map(user => \r\n      user.id === id ? { ...user, isActive, updatedAt: new Date().toISOString() } : user\r\n    );\r\n    \r\n    setUsers(updatedUsers);\r\n  };\r\n  \r\n  const updateUser = (id, userData) => {\r\n    const updatedUsers = users.map(user => \r\n      user.id === id ? { ...user, ...userData, updatedAt: new Date().toISOString() } : user\r\n    );\r\n    \r\n    setUsers(updatedUsers);\r\n  };\r\n  \r\n  // Homepage settings operations\r\n  const updateHomepageSettings = (settingsData) => {\r\n    setHomepageSettings({\r\n      ...homepageSettings,\r\n      ...settingsData,\r\n      updatedAt: new Date().toISOString()\r\n    });\r\n  };\r\n  \r\n  // Analytics data\r\n  const getAnalyticsData = () => {\r\n    // Calculate total revenue\r\n    const totalRevenue = orders.reduce((total, order) => {\r\n      if (order.status !== 'cancelled') {\r\n        return total + order.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n      }\r\n      return total;\r\n    }, 0);\r\n    \r\n    // Get pending orders count\r\n    const pendingOrdersCount = orders.filter(order => order.status === 'pending').length;\r\n    \r\n    // Get total products count\r\n    const totalProductsCount = products.length;\r\n    \r\n    // Get total categories count\r\n    const totalCategoriesCount = categories.length;\r\n    \r\n    // Get total users count\r\n    const totalUsersCount = users.length;\r\n    \r\n    // Get low stock products\r\n    const lowStockProducts = products.filter(product => product.stock < 10);\r\n    \r\n    // Get recent orders\r\n    const recentOrders = [...orders]\r\n      .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n      .slice(0, 5);\r\n    \r\n    // Calculate revenue by date (last 7 days)\r\n    const last7Days = Array.from({ length: 7 }, (_, i) => {\r\n      const date = new Date();\r\n      date.setDate(date.getDate() - i);\r\n      return date.toISOString().split('T')[0];\r\n    }).reverse();\r\n    \r\n    const revenueByDate = last7Days.map(date => {\r\n      const dayRevenue = orders\r\n        .filter(order => \r\n          order.status !== 'cancelled' && \r\n          order.date.split('T')[0] === date\r\n        )\r\n        .reduce((total, order) => \r\n          total + order.items.reduce((sum, item) => sum + (item.price * item.quantity), 0), \r\n        0);\r\n      \r\n      return { date, revenue: dayRevenue };\r\n    });\r\n    \r\n    return {\r\n      totalRevenue,\r\n      pendingOrdersCount,\r\n      totalProductsCount,\r\n      totalCategoriesCount,\r\n      totalUsersCount,\r\n      lowStockProducts,\r\n      recentOrders,\r\n      revenueByDate\r\n    };\r\n  };\r\n  \r\n  // Sample data generators\r\n  const generateSampleProducts = () => {\r\n    return [\r\n      {\r\n        id: 'prod_1',\r\n        name: 'Classic T-Shirt',\r\n        description: 'A comfortable and versatile t-shirt for everyday wear.',\r\n        price: 24.99,\r\n        category: 'cat_1',\r\n        subCategory: 'sub_1',\r\n        gender: 'unisex',\r\n        sizes: ['S', 'M', 'L', 'XL'],\r\n        colors: ['Black', 'White', 'Gray'],\r\n        stock: 100,\r\n        images: ['/assets/products/tshirt1.jpg', '/assets/products/tshirt2.jpg'],\r\n        featured: true,\r\n        trending: true,\r\n        createdAt: new Date().toISOString()\r\n      },\r\n      {\r\n        id: 'prod_2',\r\n        name: 'Slim Fit Jeans',\r\n        description: 'Modern slim fit jeans with a comfortable stretch.',\r\n        price: 59.99,\r\n        category: 'cat_2',\r\n        subCategory: 'sub_3',\r\n        gender: 'men',\r\n        sizes: ['30', '32', '34', '36'],\r\n        colors: ['Blue', 'Black'],\r\n        stock: 75,\r\n        images: ['/assets/products/jeans1.jpg', '/assets/products/jeans2.jpg'],\r\n        featured: false,\r\n        trending: true,\r\n        createdAt: new Date().toISOString()\r\n      },\r\n      {\r\n        id: 'prod_3',\r\n        name: 'Summer Dress',\r\n        description: 'Light and flowy summer dress perfect for warm days.',\r\n        price: 49.99,\r\n        category: 'cat_3',\r\n        subCategory: 'sub_5',\r\n        gender: 'women',\r\n        sizes: ['XS', 'S', 'M', 'L'],\r\n        colors: ['Red', 'Blue', 'Yellow'],\r\n        stock: 50,\r\n        images: ['/assets/products/dress1.jpg', '/assets/products/dress2.jpg'],\r\n        featured: true,\r\n        trending: false,\r\n        createdAt: new Date().toISOString()\r\n      }\r\n    ];\r\n  };\r\n  \r\n  const generateSampleCategories = () => {\r\n    return [\r\n      {\r\n        id: 'cat_1',\r\n        name: 'Tops',\r\n        description: 'All types of tops including t-shirts, shirts, and blouses',\r\n        image: '/assets/categories/tops.jpg',\r\n        featured: true,\r\n        subcategories: [\r\n          { id: 'sub_1', name: 'T-Shirts' },\r\n          { id: 'sub_2', name: 'Shirts' }\r\n        ],\r\n        createdAt: new Date().toISOString()\r\n      },\r\n      {\r\n        id: 'cat_2',\r\n        name: 'Bottoms',\r\n        description: 'All types of bottoms including pants, jeans, and shorts',\r\n        image: '/assets/categories/bottoms.jpg',\r\n        featured: true,\r\n        subcategories: [\r\n          { id: 'sub_3', name: 'Jeans' },\r\n          { id: 'sub_4', name: 'Shorts' }\r\n        ],\r\n        createdAt: new Date().toISOString()\r\n      },\r\n      {\r\n        id: 'cat_3',\r\n        name: 'Dresses',\r\n        description: 'All types of dresses for various occasions',\r\n        image: '/assets/categories/dresses.jpg',\r\n        featured: true,\r\n        subcategories: [\r\n          { id: 'sub_5', name: 'Casual Dresses' },\r\n          { id: 'sub_6', name: 'Formal Dresses' }\r\n        ],\r\n        createdAt: new Date().toISOString()\r\n      }\r\n    ];\r\n  };\r\n  \r\n  const generateSampleOrders = () => {\r\n    return [\r\n      {\r\n        id: 'ord_1',\r\n        customer: {\r\n          name: 'John Doe',\r\n          email: 'john@example.com',\r\n          phone: '555-123-4567'\r\n        },\r\n        date: new Date().toISOString(),\r\n        status: 'delivered',\r\n        shippingAddress: {\r\n          street: '123 Main St',\r\n          city: 'Anytown',\r\n          state: 'CA',\r\n          zip: '12345',\r\n          country: 'USA'\r\n        },\r\n        items: [\r\n          {\r\n            id: 'prod_1',\r\n            name: 'Classic T-Shirt',\r\n            price: 24.99,\r\n            quantity: 2,\r\n            image: '/assets/products/tshirt1.jpg',\r\n            variant: { color: 'Black', size: 'M' }\r\n          }\r\n        ],\r\n        shipping: 5.99,\r\n        tax: 4.50,\r\n        createdAt: new Date().toISOString()\r\n      },\r\n      {\r\n        id: 'ord_2',\r\n        customer: {\r\n          name: 'Jane Smith',\r\n          email: 'jane@example.com',\r\n          phone: '555-987-6543'\r\n        },\r\n        date: new Date(Date.now() - 86400000).toISOString(), // 1 day ago\r\n        status: 'shipped',\r\n        shippingAddress: {\r\n          street: '456 Oak Ave',\r\n          city: 'Somewhere',\r\n          state: 'NY',\r\n          zip: '67890',\r\n          country: 'USA'\r\n        },\r\n        items: [\r\n          {\r\n            id: 'prod_2',\r\n            name: 'Slim Fit Jeans',\r\n            price: 59.99,\r\n            quantity: 1,\r\n            image: '/assets/products/jeans1.jpg',\r\n            variant: { color: 'Blue', size: '32' }\r\n          },\r\n          {\r\n            id: 'prod_3',\r\n            name: 'Summer Dress',\r\n            price: 49.99,\r\n            quantity: 1,\r\n            image: '/assets/products/dress1.jpg',\r\n            variant: { color: 'Red', size: 'M' }\r\n          }\r\n        ],\r\n        shipping: 5.99,\r\n        tax: 8.80,\r\n        createdAt: new Date(Date.now() - 86400000).toISOString()\r\n      },\r\n      {\r\n        id: 'ord_3',\r\n        customer: {\r\n          name: 'Bob Johnson',\r\n          email: 'bob@example.com',\r\n          phone: '555-555-5555'\r\n        },\r\n        date: new Date(Date.now() - 172800000).toISOString(), // 2 days ago\r\n        status: 'pending',\r\n        shippingAddress: {\r\n          street: '789 Pine Rd',\r\n          city: 'Elsewhere',\r\n          state: 'TX',\r\n          zip: '54321',\r\n          country: 'USA'\r\n        },\r\n        items: [\r\n          {\r\n            id: 'prod_3',\r\n            name: 'Summer Dress',\r\n            price: 49.99,\r\n            quantity: 2,\r\n            image: '/assets/products/dress1.jpg',\r\n            variant: { color: 'Blue', size: 'S' }\r\n          }\r\n        ],\r\n        shipping: 5.99,\r\n        tax: 7.00,\r\n        createdAt: new Date(Date.now() - 172800000).toISOString()\r\n      }\r\n    ];\r\n  };\r\n  \r\n  const generateSampleUsers = () => {\r\n    return [\r\n      {\r\n        id: 'user_1',\r\n        name: 'Admin User',\r\n        email: 'admin@example.com',\r\n        role: 'admin',\r\n        isActive: true,\r\n        createdAt: new Date().toISOString()\r\n      },\r\n      {\r\n        id: 'user_2',\r\n        name: 'John Doe',\r\n        email: 'john@example.com',\r\n        role: 'user',\r\n        isActive: true,\r\n        createdAt: new Date(Date.now() - 86400000).toISOString()\r\n      },\r\n      {\r\n        id: 'user_3',\r\n        name: 'Jane Smith',\r\n        email: 'jane@example.com',\r\n        role: 'user',\r\n        isActive: true,\r\n        createdAt: new Date(Date.now() - 172800000).toISOString()\r\n      }\r\n    ];\r\n  };\r\n  \r\n  const generateSampleHomepageSettings = () => {\r\n    return {\r\n      heroTitle: 'Summer Collection',\r\n      heroSubtitle: 'Discover our latest summer styles with up to 50% off',\r\n      heroImage: '/assets/products/hero.jpg',\r\n      featuredCategories: ['cat_1', 'cat_2', 'cat_3'],\r\n      featuredProducts: ['prod_1', 'prod_2', 'prod_3'],\r\n      promoTitle: 'New Arrivals',\r\n      promoSubtitle: 'Check out our latest products just for you',\r\n      promoImage: '/assets/products/promo.jpg',\r\n      promoLink: '/shop/new-arrivals',\r\n      testimonials: [\r\n        {\r\n          id: 'testimonial_1',\r\n          name: 'Sarah Johnson',\r\n          role: 'Regular Customer',\r\n          comment: 'I love the quality of the clothes. They last forever and always look great!',\r\n          image: '/assets/testimonials/person1.jpg'\r\n        },\r\n        {\r\n          id: 'testimonial_2',\r\n          name: 'Mike Thompson',\r\n          role: 'Fashion Enthusiast',\r\n          comment: 'The styles are always on trend and the prices are reasonable. My go-to shop!',\r\n          image: '/assets/testimonials/person2.jpg'\r\n        }\r\n      ],\r\n      createdAt: new Date().toISOString()\r\n    };\r\n  };\r\n  \r\n  // Stats and analytics\r\n  const getStats = () => {\r\n    // Calculate total revenue from all orders\r\n    const totalRevenue = orders.reduce((sum, order) => {\r\n      const orderTotal = order.items.reduce((itemSum, item) => \r\n        itemSum + (item.price * item.quantity), 0);\r\n      return sum + orderTotal + (order.shipping || 0) + (order.tax || 0);\r\n    }, 0);\r\n    \r\n    // Get order counts by status\r\n    const ordersByStatus = {\r\n      pending: orders.filter(order => order.status === 'pending').length,\r\n      processing: orders.filter(order => order.status === 'processing').length,\r\n      shipped: orders.filter(order => order.status === 'shipped').length,\r\n      delivered: orders.filter(order => order.status === 'delivered').length,\r\n      cancelled: orders.filter(order => order.status === 'cancelled').length\r\n    };\r\n    \r\n    // Calculate growth percentages (using mock data for now)\r\n    const productGrowth = 12;\r\n    const orderGrowth = 5;\r\n    const userGrowth = 8;\r\n    const revenueGrowth = 15;\r\n    \r\n    // Generate revenue and order data by month (last 6 months)\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const currentMonth = new Date().getMonth();\r\n    \r\n    // Initialize revenue and orders by month\r\n    const revenueByMonth = {};\r\n    const ordersByMonth = {};\r\n    \r\n    // Create last 6 months labels\r\n    for (let i = 5; i >= 0; i--) {\r\n      const monthIndex = (currentMonth - i + 12) % 12;\r\n      const monthName = monthNames[monthIndex];\r\n      revenueByMonth[monthName] = 0;\r\n      ordersByMonth[monthName] = 0;\r\n    }\r\n    \r\n    // Populate with data (using mock data for demonstration)\r\n    const monthKeys = Object.keys(revenueByMonth);\r\n    \r\n    // Mock revenue data\r\n    revenueByMonth[monthKeys[0]] = 1200;\r\n    revenueByMonth[monthKeys[1]] = 1500;\r\n    revenueByMonth[monthKeys[2]] = 1800;\r\n    revenueByMonth[monthKeys[3]] = 1600;\r\n    revenueByMonth[monthKeys[4]] = 2200;\r\n    revenueByMonth[monthKeys[5]] = 2500;\r\n    \r\n    // Mock order data\r\n    ordersByMonth[monthKeys[0]] = 12;\r\n    ordersByMonth[monthKeys[1]] = 15;\r\n    ordersByMonth[monthKeys[2]] = 18;\r\n    ordersByMonth[monthKeys[3]] = 16;\r\n    ordersByMonth[monthKeys[4]] = 22;\r\n    ordersByMonth[monthKeys[5]] = 25;\r\n    \r\n    // Calculate top products\r\n    const productSales = {};\r\n    orders.forEach(order => {\r\n      order.items.forEach(item => {\r\n        if (!productSales[item.id]) {\r\n          productSales[item.id] = {\r\n            id: item.id,\r\n            name: item.name,\r\n            image: item.image,\r\n            revenue: 0,\r\n            count: 0\r\n          };\r\n        }\r\n        productSales[item.id].revenue += item.price * item.quantity;\r\n        productSales[item.id].count += item.quantity;\r\n      });\r\n    });\r\n    \r\n    const topProducts = Object.values(productSales)\r\n      .sort((a, b) => b.revenue - a.revenue)\r\n      .slice(0, 5)\r\n      .map(product => {\r\n        // Find the actual product to get the latest data\r\n        const fullProduct = products.find(p => p.id === product.id) || product;\r\n        return {\r\n          ...product,\r\n          name: fullProduct.name,\r\n          image: fullProduct.image,\r\n          percentage: Math.round((product.revenue / totalRevenue) * 100)\r\n        };\r\n      });\r\n    \r\n    // Calculate top categories\r\n    const categorySales = {};\r\n    orders.forEach(order => {\r\n      order.items.forEach(item => {\r\n        // Find product to get its category\r\n        const product = products.find(p => p.id === item.id);\r\n        if (product && product.categoryId) {\r\n          if (!categorySales[product.categoryId]) {\r\n            const category = categories.find(c => c.id === product.categoryId);\r\n            categorySales[product.categoryId] = {\r\n              id: product.categoryId,\r\n              name: category ? category.name : 'Unknown',\r\n              image: category ? category.image : null,\r\n              count: 0\r\n            };\r\n          }\r\n          categorySales[product.categoryId].count += item.quantity;\r\n        }\r\n      });\r\n    });\r\n    \r\n    const topCategories = Object.values(categorySales)\r\n      .sort((a, b) => b.count - a.count)\r\n      .slice(0, 5)\r\n      .map(category => {\r\n        const totalCount = Object.values(categorySales).reduce((sum, cat) => sum + cat.count, 0);\r\n        return {\r\n          ...category,\r\n          percentage: Math.round((category.count / totalCount) * 100)\r\n        };\r\n      });\r\n    \r\n    // Generate recent activity\r\n    const recentActivity = [\r\n      {\r\n        type: 'order',\r\n        message: 'New order #ORD-5782 received',\r\n        time: '5 minutes ago'\r\n      },\r\n      {\r\n        type: 'user',\r\n        message: 'New user registered: Emma Thompson',\r\n        time: '1 hour ago'\r\n      },\r\n      {\r\n        type: 'product',\r\n        message: 'Product \"Summer T-Shirt\" is low in stock (2 remaining)',\r\n        time: '3 hours ago'\r\n      },\r\n      {\r\n        type: 'order',\r\n        message: 'Order #ORD-5781 status changed to \"Shipped\"',\r\n        time: '5 hours ago'\r\n      },\r\n      {\r\n        type: 'product',\r\n        message: 'Product \"Leather Jacket\" was updated',\r\n        time: '1 day ago'\r\n      },\r\n      {\r\n        type: 'user',\r\n        message: 'User account for \"john@example.com\" was activated',\r\n        time: '2 days ago'\r\n      }\r\n    ];\r\n    \r\n    return {\r\n      totalProducts: products.length,\r\n      totalOrders: orders.length,\r\n      totalUsers: users.length,\r\n      totalRevenue,\r\n      ordersByStatus,\r\n      productGrowth,\r\n      orderGrowth,\r\n      userGrowth,\r\n      revenueGrowth,\r\n      revenueByMonth,\r\n      ordersByMonth,\r\n      topProducts,\r\n      topCategories,\r\n      recentActivity\r\n    };\r\n  };\r\n\r\n  const value = {\r\n    // Data\r\n    products,\r\n    categories,\r\n    orders,\r\n    users,\r\n    homepageSettings,\r\n    loading,\r\n    \r\n    // Product operations\r\n    getProductById,\r\n    addProduct,\r\n    updateProduct,\r\n    deleteProduct,\r\n    \r\n    // Category operations\r\n    getCategoryById,\r\n    addCategory,\r\n    updateCategory,\r\n    deleteCategory,\r\n    \r\n    // Order operations\r\n    getOrderById,\r\n    updateOrderStatus,\r\n    \r\n    // User operations\r\n    getUserById,\r\n    updateUserStatus,\r\n    updateUser,\r\n    \r\n    // Homepage settings operations\r\n    updateHomepageSettings,\r\n    \r\n    // Analytics\r\n    getAnalyticsData,\r\n    \r\n    // Stats\r\n    getStats\r\n  };\r\n\r\n  return (\r\n    <AdminDataContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AdminDataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AdminDataContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}